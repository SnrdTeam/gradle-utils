
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: io.codearte.gradle.nexus.NexusStagingPlugin
apply from: 'https://raw.githubusercontent.com/SnrdTeam/gradle-utils/master/project-extensions.gradle'

repositories {

    if (projectExtensions.isSnapshot())
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if (projectExtensions.isRelease())
    signing {
        sign configurations.archives
    }

uploadArchives {
    repositories {
        mavenDeployer {

            if (projectExtensions.isRelease())
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def ossrhUsername = project.hasProperty("ossrhUsername") ? project.property("ossrhUsername") : null
            def ossrhPassword = project.hasProperty("ossrhPassword") ? project.property("ossrhPassword") : null

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
        }
    }
}

nexusStaging {
    numberOfRetries = 10
    delayBetweenRetriesInMillis = 5000
}

task checkSnapshot {

    doLast {

        assert projectExtensions.isSnapshot() : "Not a snapshot"
    }
}

task checkRelease {

    doLast {

        assert projectExtensions.isRelease() : "Not a release"
    }
}